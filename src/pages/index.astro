---
// Component Imports
import BaseHead from '../components/BaseHead.astro';
import BlogHeader from '../components/BlogHeader.astro';
import BlogPostPreview from '../components/BlogPostPreview.astro';

interface MarkdownFrontmatter {
	publishDate: number;
}

// Component Script:
// You can write any JavaScript/TypeScript that you'd like here.
// It will run during the build, but never in the browser.
// All variables are available to use in the HTML template below.
let title = 'Blog';
let description = 'Another developer\'s blog';
let permalink = 'https://setiz.github.io/blog/';

// Data Fetching: List all Markdown posts in the repo.

let allPosts = await Astro.fetchContent('./posts/*.md');
allPosts = allPosts.sort((a, b) => new Date(b.publishDate).valueOf() - new Date(a.publishDate).valueOf());

// Full Astro Component Syntax:
// https://docs.astro.build/core-concepts/astro-components/

export async function getStaticPaths({rss}) {
  const allPosts = Astro.fetchContent('./post/*.md');
  const sortedPosts = allPosts.sort((a, b) => new Date(b.date) - new Date(a.date));
  // Generate an RSS feed from this collection
  rss({
    // The RSS Feed title, description, and custom metadata.
    title: 'Donâ€™s Blog',
    // See "Styling" section below
    stylesheet: true,
    description: 'An example blog on Astro',
    customData: `<language>en-us</language>`,
    // The list of items for your RSS feed, sorted.
    items: sortedPosts.map(item => ({
      title: item.title,
      description: item.description,
      link: item.url,
      pubDate: item.date,
    })),
    // Optional: Customize where the file is written to.
    // Otherwise, defaults to "/rss.xml"
    dest: "/blog/feed.xml",
  });
  // Return your paths
  return {
	paths: sortedPosts.map(item => ({
	  params: {
		slug: item.slug,
	  },
	})),
	fallback: false,
  };
}
---

<html lang="en">
	<head>
		<BaseHead title={title} description={description} permalink={permalink} />

		<style>
			header {
				width: 100%;
				height: 100%;
				background-color: var(--theme-bg-offset);
				display: flex;
				align-items: center;
				justify-content: center;
			}

			.content {
				margin-top: 4rem;
				margin-bottom: 8rem;
			}

			.content :global(main > * + *) {
				margin-top: 1rem;
			}

			.intro {
				padding-bottom: 4rem;
				margin-bottom: 2rem;
				border-bottom: 4px solid var(--theme-divider);
			}

			.intro > * {
				margin: 0;
			}

			.latest {
				font-size: 2.5rem;
				font-weight: 700;
			}
		</style>
	</head>

	<body>
		<BlogHeader />
		<div class="wrapper">
			<main class="content">
				<section class="intro">
					<h1 class="latest">{title}</h1>
					<p>{description}</p>
				</section>
				<section aria-label="Blog post list">
					{allPosts.map((p) => <BlogPostPreview post={p} />)}
				</section>
			</main>
		</div>
	</body>
</html>
